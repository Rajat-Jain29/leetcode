

class Solution {

public:

int t[1001][1001];

int lcs(string x,string y,int m ,int n)
{
    for(int i=0;i<m+1;i++)
    {
        for(int j=0;j<n+1;j++)
        {
            if(i==0||j==0)
            {
                t[i][j]=0;
            }
        }
    }
    for(int i=1;i<m+1;i++)
    {
        for(int j=1;j<n+1;j++)
        {
            if(x[i-1]==y[j-1])
            {
                t[i][j]=1+t[i-1][j-1];
            }
            else{
                t[i][j]= max(t[i][j-1],t[i-1][j]);
            }
        }
    }
    return t[m][n];
}


int longestPalindromeSubseq(string s) {
    string b=s;
    reverse(s.begin(),s.end());
    int m=s.length();
    int n=m;
    return lcs(s,b,m,n);
}
};

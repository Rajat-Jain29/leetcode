class Solution {
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {
        vector<vector<int>> res;
        vector<int> p;
        for(int i=0;i<nums1.size();i++){
            if( find(nums2.begin() , nums2.end() , nums1[i]) == nums2.end() && find(p.begin(),p.end(),nums1[i]) == p.end() )
                p.push_back( nums1[i] );
        }
        res.push_back(p);
        p={};
        for(int i=0;i<nums2.size();i++){
            if( find(nums1.begin() , nums1.end() , nums2[i]) == nums1.end() && find(p.begin(),p.end(),nums2[i]) == p.end() )
                p.push_back( nums2[i] );
        }
        res.push_back(p);
        return res;

        // set<int> r,s;
        
        // for(auto it : nums1)
        //     r.insert(it);
        
        // for(auto it : nums2)
        //     s.insert(it);
        // nums1.clear();
        //  nums2.clear();
        //  for(auto it : r)
        //     nums1.push_back(it);
        //  for(auto it : s)
        //     nums2.push_back(it);
        
        
        // unordered_map<int,int> m1,m2;
        // for(int i=0;i<nums1.size();i++)
        //     m1[nums1[i]]++;
        // for(int i=0;i<nums2.size();i++)
        //     m2[nums2[i]]++;
        // vector<int> res;
        // vector<vector<int>> p;
        // for(int i=0;i<nums1.size();i++){
        //     if(m2.find(nums1[i]) == m2.end() )
        //         res.push_back(nums1[i]);
        // }
        // p.push_back(res);
        // res ={};
        // for(int i=0;i<nums2.size();i++){
        //     if(m1.find(nums2[i]) == m1.end() )
        //         res.push_back(nums2[i]);
        // }
        // p.push_back(res);
        // return p;
    }
};

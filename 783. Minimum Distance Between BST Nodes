/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> p;
    void inorder(TreeNode *root){
        if(root == NULL)
            return;
        inorder(root->left);
        p.push_back(root->val);
        inorder(root->right);
        
    }
    int minDiffInBST(TreeNode* root) {
        if(root==NULL)
            return 0;
        inorder(root);
        
        int mn = INT_MAX;
        for(int i=0;i<p.size()-1;i++){
            mn = min(mn,p[i+1]-p[i]);
        }
        return mn;
    }
};

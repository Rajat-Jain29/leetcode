class Solution {
public:
    bool dfs(vector<vector<char>>& board, string word,int i,int j, int k ){
        if(i<0 || j<0 || i>=board.size()||j>=board[i].size() || board[i][j] != word[k])
            return false;
        if( k == word.size()-1 )
            return true;
        board[i][j] = '0';
        bool res = dfs(board,word,i+1,j,k+1)||dfs(board,word,i-1,j,k+1)||
        dfs(board,word,i,j+1,k+1)||dfs(board,word,i,j-1,k+1);
        board[i][j] = word[k];
        return res;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        int k = 0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if( board[i][j] == word[0] ){
                    if( dfs(board,word,i,j,k) )
                        return true;
                }
            }
        }
        return false;
    }
};

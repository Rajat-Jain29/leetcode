class Solution {
public:
    
   bool dfs(vector<vector<int>>& graph, vector<int> &vis,int i){
      
      for(auto it : graph[i]){
         
          if( vis[it] == -1){
               vis[it] = 1 - vis[i];
              if( !dfs(graph,vis,it) )
                    return false;
          }
          else if(vis[it] == vis[i])
              return false;
      }
       return true;
   }
    
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
      vector<int> color( n, -1);
        for(int i=0;i<n;i++){
            if(color[i] == -1){
                color[i] = 1;
                if( !dfs(graph,color,i) )
                    return false;
            }
        }
        return true;
    }
};

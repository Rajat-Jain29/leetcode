class Solution {
public:
    void dfs( int i, vector<int> &vis,vector<int> adj[],long long &cnt ){
        vis[i] = 1;
        cnt++;
        for(auto it : adj[i]){
            if( !vis[it] )
                dfs(it,vis,adj,cnt);
        }
    }
    long long countPairs(int n, vector<vector<int>>& edges) {
        vector<int> adj[n];
        int size = edges.size();
        for(int i=0;i<size;i++){
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
        }
        long long ans = ((long long)n*(n-1))/2;
        vector<int> vis(n,0);
        for(int i=0;i<n;i++){
            if( !vis[i] ){
                long long cnt = 0;
                dfs( i,vis,adj,cnt );
                ans -= (cnt*(cnt-1)/2);
            }
        }
        return ans;
    }
};
